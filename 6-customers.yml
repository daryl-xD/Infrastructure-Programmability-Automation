---
- hosts: dc:iis
  gather_facts: false

  vars:
    domain_name: customers.com
    servers: "{{ groups['iis'] | map('extract', hostvars, 'ansible_host') | list}}"

  tasks:
  - name: include vars
    include_vars:
      file: vars_vault.yml


  - name: Load customer data
    set_fact:
      customers: "{{ lookup('file', 'customers.json') }}"

  - name: Split domain name
    set_fact:
      domain_parts: "{{ domain_name.split('.') }}"

  - name: Deploy customer environment
    community.windows.win_domain_ou:
        name: "{{ item.username }}"
        state: present
    with_items: "{{ customers }}"

  - name: Create AD user
    community.windows.win_domain_user:
      name: "{{ item.name }}"
      password: "{{ item.password }}"
      path: ou={{ item.username }},dc={{ domain_parts[0] }},dc={{ domain_parts[1] }}
      state: present
    with_items: "{{ customers }}"

  - name: Create DNS entry
    community.windows.win_dns_record:
      name: "{{ item.domain_prefix }}.{{ domain_name }}"
      type: A
      value: "{{ servers | random }}"
      zone: "{{domain_name}}"
      state: present
    with_items: "{{ customers }}"
  
  - name: create folder for websites
    ansible.windows.win_file:
      path: "C:\\inetpub\\wwwroot{{ item.domain_prefix }}"
      state: directory
    with_items: "{{ customers }}"
    when: inventory_hostname in groups['iis']



  - name: applix IIS site
    community.windows.win_iis_website:
      name: "{{ item.domain_prefix }}"
      state: started
      port: 80
      ip: "{{ ansible_host }}"
      hostname: "{{ item.domain_prefix }}.{{ domain_parts[0] }}.{{ domain_parts[1] }}"
      physical_path: "C:\\inetpub\\wwwroot{{ item.domain_prefix }}"
      parameters: logfile.directory:C:\sites\logs
    with_items: "{{ customers }}"
    register: website
    when: inventory_hostname in groups['iis']


    